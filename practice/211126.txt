★중요사항 - 훈련데이터 테스트 데이터를 나누는이유

(참고:https://wikidocs.net/31019)

훈련데이터 테스트 데이터를 나누는이유?! 30퍼가 아까운데 왜?
평가데이터는 훈련에 영향을 미치지 않는다 = 본 데이터로 쓸모가없을 수 있다
평가데이터는 누가 판단하는가?! 주체는 '사람'
훈련에 영향을 미치려면 model.fit이여야.
이미 가중치와 loss가 생성된 후에는 의미가 없어.
cross validation이 나오기 전까지는 절대적으로 3등분으로 나눈다
"   train - test 사이의 validation으로.   "
train 은 fit에서 test는 evaluate에서.(어떻게보면 test부분은 날려버린다 생각할 수도 있다.
훈련 데이터의 일부를 짤라서 검증용 데이터인 validation으로 사용

┌			┓
Train&Validation = 기계의 영역
	Test    = 사람의 영역
└			┛

사용방법이 쉽고 셔플까지 적용되므로 간단하고 합리적인 함수이지만 Validation Set을 따로 만들어주지는 않는다. Validation Set이 필요하다면 분할한 데이터 중 한 덩어리에 해당 함수를 한 번 더 사용하면 된다.
[출처] [Python] sklearn의 train_test_split() 사용법|작성자 Paris Lee



★!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Evaluate Predict, R2에 들어가는 매개변수랑 다 어떤 원리로 돌아가는지 확인해 둘 것! !



keras13_overfit1_boston 에서.
loss, val_loss 과적합여부 확인, 그래프 시각화를 통해 또 확인(처음 부분 loss를 더 크게 잡거나epoch를 더 늘려주거나 등등)

그래프를 보고 :

epochs 1000번, 2000번, 3000번 중 어떤게 좋은걸까?모른다.
keras13_overfit2_diabets의 plot을 돌려보고 확인해보자.
loss 그리고 val_loss 두개의 그래프를 그린다라면, 얼마나 적합하게 내려가는지를 확인해야하겠다.
기본적으로 loss보다 valoss의 최저값을 따지기에
범위가 train_loss와 너무 떨어져있으면 과적합이겠다.
둘의 적합구간이 점점 가까워지며 어느정도 있다면 잘 되어가고 있는 것이겠다.
판단할땐 가급적 val_loss로 확인한다. 이때 val_loss 최저점을 보며 확인한다.
예를 들어 보겠다. 100epoch로 돌렸을때 중간39지점(val이 최저점인 곳)과 제일 끝100부분 중 실질적인 성능은 어디가 좋을까?
사실상 val_loss가 최저점인 곳이 좋은 곳이겠다. 39번째가 최소값이지만 훈련은 100번까지 돌고 나서야 끝이난다
그렇다면 중간부분 39번째에서 훈련을 중지하면 좋은걸까? 
그렇지만 중지하고 다시 돌리면 똑같이는 안 될 것이다(바뀌니까).
그럼 그냥 일단 이 그래프를 저장해놓놓으면 본 구간에선. 가장 좋은 val_loss 값이 될 것이다.

이를 어떻게 해결한다겠다는건가? Early Stopping! (keras14.py) 

val_loss가 최저점이면 끊어버리면 되겠다.
그러면 최저점을 어떻게찾는가? epo 첫 시도는 자기가 최저점이다. 2번째 시도도 자기가 최저점일 것이다.
그럼 매번최저점인데 매번 끝내버리는가??? 아니겠지?
예를들어서 지연도를 10로 set하고 val_loss의 첫 최저점으로 epochs 10번의 유예를 줄거야
그 안에 최저점이 갱신되겠지?? 갱신된다면 최저점이 갱신된 시점부터 다시 10번~ 10번~~
그 안에 최저점이 갱신 안된다면?? 끊고 다시 50으로 set하고 최저점이 갱신된 시점부터 다시  50번
그 안에 최저점이 갱신되겠지?? 갱신된다면 최저점이 갱신된 시점부터 다시 50번~ 50번~~
그 안에 최저점이 갱신 안된다면?? 끊고 다시 70으로 set하고 최저점이 갱신된 시점부터 다시  70번
이런식으로 "인내심"의 싸움이 될 것이다. 나의 인내심은 몇 epo까지다.??

최소에서 멈추는게 아닌 최소찍고도 50번 다 하고 멈춰.

es주어진상태에서 tensorflow.org등에서 es에 대한 parameter에 대한 설명 등
이게 과연 patient주변의 최소값에서 멈춘건지 최소값에서 n번지나서 멈춘건지 판단해서
github에 명시해 둘것

만약 지나서 멈춘거라면 안 좋은 것이겠지?
최소값 n번지나서 멈췄지만 제공하는 loss는 최소값을 제공한다고 생각할 수도 있겠지?
공식문서 보면 최소값준지 지나서 준지 알 수 있을 ㅓㄳ이다.
+부수적인 parameter도 명시할 것

근거는 어떻게 확인하는가? hist값 찍은 것, loss값 찍은 것
예를 들어 멈춘 지점에서의 hist값과 끝난지점의 hist값이 있을텐데
내가 loss찍어본 값이 둘중 어느 부근인지 확인해 봐야하겠다.
